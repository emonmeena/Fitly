{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport IconButton from \"../IconButton\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\n\nvar DataTablePagination = function DataTablePagination(_ref) {\n  var label = _ref.label,\n      page = _ref.page,\n      numberOfPages = _ref.numberOfPages,\n      onPageChange = _ref.onPageChange,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, [\"label\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\"]);\n\n  var labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style]\n  }), React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 1\n  }, label), React.createElement(IconButton, {\n    icon: function icon(_ref2) {\n      var size = _ref2.size,\n          color = _ref2.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: theme.colors.text,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(page - 1);\n    }\n  }), React.createElement(IconButton, {\n    icon: function icon(_ref3) {\n      var size = _ref3.size,\n          color = _ref3.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: theme.colors.text,\n    disabled: page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(page + 1);\n    }\n  }));\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 44\n  }\n});\nexport default withTheme(DataTablePagination);\nexport { DataTablePagination };","map":{"version":3,"sources":["DataTablePagination.tsx"],"names":["DataTablePagination","theme","rest","labelColor","color","styles","I18nManager","page","onPageChange","numberOfPages","container","justifyContent","flexDirection","alignItems","paddingLeft","label","fontSize","marginRight","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTablePagination = ({\n  label,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  return (\n    <View {...rest} style={[styles.container, style]}>\n      <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n        {label}\n      </Text>\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n      />\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}