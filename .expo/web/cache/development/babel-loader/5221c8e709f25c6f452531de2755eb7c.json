{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { withTheme } from \"../../core/theming\";\n\nfunction AnimatedText(_ref) {\n  var style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, [\"style\", \"theme\"]);\n\n  var writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n  return React.createElement(Animated.Text, _extends({}, rest, {\n    style: [_objectSpread(_objectSpread({}, theme.fonts.regular), {}, {\n      color: theme.colors.text,\n      textAlign: 'left',\n      writingDirection: writingDirection\n    }), style]\n  }));\n}\n\nexport default withTheme(AnimatedText);","map":{"version":3,"sources":["AnimatedText.tsx"],"names":["theme","rest","writingDirection","I18nManager","color","textAlign","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,SAAA,SAAA;;AAeA,SAAA,YAAA,CAAA,IAAA,EAAwD;AAAA,MAAlC,KAAkC,GAAA,IAAA,CAAlC,KAAkC;AAAA,MAAzBA,KAAyB,GAAA,IAAA,CAAzBA,KAAyB;AAAA,MAAfC,IAAe,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AACtD,MAAMC,gBAAgB,GAAGC,WAAW,CAAXA,KAAAA,GAAAA,KAAAA,GAAzB,KAAA;AAEA,SAEE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAEAH,KAAK,CAALA,KAAAA,CAFA,OAAA,CAAA,EAAA,EAAA,EAAA;AAGHI,MAAAA,KAAK,EAAEJ,KAAK,CAALA,MAAAA,CAHJ,IAAA;AAIHK,MAAAA,SAAS,EAJN,MAAA;AAKHH,MAAAA,gBAAAA,EAAAA;AALG,KAAA,CAAA,EAAA,KAAA;AAFT,GAAA,CAAA,CAFF;AAeD;;AAED,eAAeI,SAAS,CAAxB,YAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Animated, TextStyle, I18nManager, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof Animated.Text> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://facebook.github.io/react-native/docs/text.html#props\n */\nfunction AnimatedText({ style, theme, ...rest }: Props) {\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    //@ts-ignore\n    <Animated.Text\n      {...rest}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n          textAlign: 'left',\n          writingDirection,\n        },\n        style,\n      ]}\n    />\n  );\n}\n\nexport default withTheme(AnimatedText);\n"]},"metadata":{},"sourceType":"module"}