{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableRow = function DataTableRow(_ref) {\n  var onPress = _ref.onPress,\n      style = _ref.style,\n      theme = _ref.theme,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"onPress\", \"style\", \"theme\", \"children\"]);\n\n  var borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    onPress: onPress,\n    style: [styles.container, {\n      borderBottomColor: borderBottomColor\n    }, style]\n  }), React.createElement(View, {\n    style: styles.content\n  }, children));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default withTheme(DataTableRow);\nexport { DataTableRow };","map":{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","children","rest","borderBottomColor","color","theme","styles","content","container","borderStyle","borderBottomWidth","StyleSheet","minHeight","paddingHorizontal","flex","flexDirection","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,OAAA;;;AAEA,OAAA,eAAA;AACA,SAAA,KAAA,EAAA,KAAA;AACA,SAAA,SAAA;;AA+CA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAyD;AAAA,MAAxD,OAAwD,GAAA,IAAA,CAAxD,OAAwD;AAAA,MAAxD,KAAwD,GAAA,IAAA,CAAxD,KAAwD;AAAA,MAAxD,KAAwD,GAAA,IAAA,CAAxD,KAAwD;AAAA,MAA/BC,QAA+B,GAAA,IAAA,CAA/BA,QAA+B;AAAA,MAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA;;AAC5E,MAAMC,iBAAiB,GAAGC,KAAK,CAACC,KAAK,CAALA,IAAAA,GAAAA,KAAAA,GAAND,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAA1B,MAA0BA,EAA1B;AAKA,SACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,OAAO,EAFT,OAAA;AAGE,IAAA,KAAK,EAAE,CAACE,MAAM,CAAP,SAAA,EAAmB;AAAEH,MAAAA,iBAAAA,EAAAA;AAAF,KAAnB,EAAA,KAAA;AAHT,GAAA,CAAA,EAKE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC;AAApB,GAAA,EANJ,QAMI,CALF,CADF;AANF,CAAA;;AAiBA,IAAMD,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BE,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EADF,OAAA;AAETC,IAAAA,iBAAiB,EAAEC,UAAU,CAFpB,aAAA;AAGTC,IAAAA,SAAS,EAHA,EAAA;AAITC,IAAAA,iBAAiB,EAAE;AAJV,GADoB;AAO/BN,EAAAA,OAAO,EAAE;AACPO,IAAAA,IAAI,EADG,CAAA;AAEPC,IAAAA,aAAa,EAAE;AAFR;AAPsB,CAAlB,CAAf;AAaA,eAAeC,SAAS,CAAxB,YAAwB,CAAxB;AAGA,SAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({ onPress, style, theme, children, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content}>{children}</View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}