{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Consumer as SettingsConsumer } from \"../core/settings\";\nimport { accessibilityProps } from \"./MaterialCommunityIcon\";\nimport { withTheme } from \"../core/theming\";\n\nvar isImageSource = function isImageSource(source) {\n  return typeof source === 'object' && source !== null && Object.prototype.hasOwnProperty.call(source, 'uri') && typeof source.uri === 'string' || typeof source === 'number' || Platform.OS === 'web' && typeof source === 'string' && (source.startsWith('data:image') || /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source));\n};\n\nvar getIconId = function getIconId(source) {\n  if (typeof source === 'object' && source !== null && Object.prototype.hasOwnProperty.call(source, 'uri') && typeof source.uri === 'string') {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport var isValidIcon = function isValidIcon(source) {\n  return typeof source === 'string' || typeof source === 'function' || isImageSource(source);\n};\nexport var isEqualIcon = function isEqualIcon(a, b) {\n  return a === b || getIconId(a) === getIconId(b);\n};\n\nvar Icon = function Icon(_ref) {\n  var source = _ref.source,\n      color = _ref.color,\n      size = _ref.size,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, [\"source\", \"color\", \"size\", \"theme\"]);\n\n  var direction = typeof source === 'object' && source.direction && source.source ? source.direction === 'auto' ? I18nManager.isRTL ? 'rtl' : 'ltr' : source.direction : null;\n  var s = typeof source === 'object' && source.direction && source.source ? source.source : source;\n  var iconColor = color || theme.colors.text;\n\n  if (isImageSource(s)) {\n    return React.createElement(Image, _extends({}, rest, {\n      source: s,\n      style: [{\n        transform: [{\n          scaleX: direction === 'rtl' ? -1 : 1\n        }]\n      }, {\n        width: size,\n        height: size,\n        tintColor: color,\n        resizeMode: 'contain'\n      }]\n    }, accessibilityProps));\n  } else if (typeof s === 'string') {\n    return React.createElement(SettingsConsumer, null, function (_ref2) {\n      var icon = _ref2.icon;\n      return icon({\n        name: s,\n        color: iconColor,\n        size: size,\n        direction: direction\n      });\n    });\n  } else if (typeof s === 'function') {\n    return s({\n      color: iconColor,\n      size: size,\n      direction: direction\n    });\n  }\n\n  return null;\n};\n\nexport default withTheme(Icon);","map":{"version":3,"sources":["Icon.tsx"],"names":["Consumer","isImageSource","source","Object","Platform","getIconId","isValidIcon","isEqualIcon","a","Icon","theme","rest","direction","I18nManager","s","iconColor","color","transform","scaleX","width","height","tintColor","resizeMode","icon","name","size","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  I18nManager,\n  Platform,\n  ImageSourcePropType,\n} from 'react-native';\nimport { Consumer as SettingsConsumer } from '../core/settings';\nimport { accessibilityProps } from './MaterialCommunityIcon';\nimport { withTheme } from '../core/theming';\n\ntype IconSourceBase = string | ImageSourcePropType;\n\nexport type IconSource =\n  | IconSourceBase\n  | Readonly<{ source: IconSourceBase; direction: 'rtl' | 'ltr' | 'auto' }>\n  | ((props: IconProps & { color: string }) => React.ReactNode);\n\ntype IconProps = {\n  size: number;\n  allowFontScaling?: boolean;\n};\n\ntype Props = IconProps & {\n  color?: string;\n  source: any;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst isImageSource = (source: any) =>\n  // source is an object with uri\n  (typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string') ||\n  // source is a module, e.g. - require('image')\n  typeof source === 'number' ||\n  // image url on web\n  (Platform.OS === 'web' &&\n    typeof source === 'string' &&\n    (source.startsWith('data:image') ||\n      /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source)));\n\nconst getIconId = (source: any) => {\n  if (\n    typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string'\n  ) {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport const isValidIcon = (source: any) =>\n  typeof source === 'string' ||\n  typeof source === 'function' ||\n  isImageSource(source);\n\nexport const isEqualIcon = (a: any, b: any) =>\n  a === b || getIconId(a) === getIconId(b);\n\nconst Icon = ({ source, color, size, theme, ...rest }: Props) => {\n  const direction =\n    // @ts-ignore\n    typeof source === 'object' && source.direction && source.source\n      ? source.direction === 'auto'\n        ? I18nManager.isRTL\n          ? 'rtl'\n          : 'ltr'\n        : source.direction\n      : null;\n  const s =\n    // @ts-ignore\n    typeof source === 'object' && source.direction && source.source\n      ? source.source\n      : source;\n  const iconColor = color || theme.colors.text;\n\n  if (isImageSource(s)) {\n    return (\n      <Image\n        {...rest}\n        source={s}\n        style={[\n          {\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n          },\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n            resizeMode: 'contain',\n          },\n        ]}\n        {...accessibilityProps}\n      />\n    );\n  } else if (typeof s === 'string') {\n    return (\n      <SettingsConsumer>\n        {({ icon }) => {\n          return icon({\n            name: s,\n            color: iconColor,\n            size,\n            direction,\n          });\n        }}\n      </SettingsConsumer>\n    );\n  } else if (typeof s === 'function') {\n    return s({ color: iconColor, size, direction });\n  }\n\n  return null;\n};\n\nexport default withTheme(Icon);\n"]},"metadata":{},"sourceType":"module"}