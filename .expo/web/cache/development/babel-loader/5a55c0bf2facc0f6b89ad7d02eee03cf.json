{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nvar defaultSize = 64;\n\nvar AvatarImage = function AvatarImage(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? defaultSize : _ref$size,\n      source = _ref.source,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, [\"size\", \"source\", \"style\", \"theme\"]);\n\n  var colors = theme.colors;\n\n  var _ref2 = StyleSheet.flatten(style) || {},\n      _ref2$backgroundColor = _ref2.backgroundColor,\n      backgroundColor = _ref2$backgroundColor === void 0 ? colors.primary : _ref2$backgroundColor;\n\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, style]\n  }, rest), typeof source === 'function' && source({\n    size: size\n  }), typeof source !== 'function' && React.createElement(Image, {\n    source: source,\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }\n  }));\n};\n\nAvatarImage.displayName = 'Avatar.Image';\nexport default withTheme(AvatarImage);","map":{"version":3,"sources":["AvatarImage.tsx"],"names":["defaultSize","AvatarImage","size","theme","rest","colors","backgroundColor","primary","StyleSheet","width","height","borderRadius","source","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AASA,SAAA,SAAA;AAEA,IAAMA,WAAW,GAAjB,EAAA;;AA4CA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAMP;AAAA,kBAAA,IAAA,CALXC,IAKW;AAAA,MALXA,IAKW,0BANQ,WAMR;AAAA,MANQ,MAMR,GAAA,IAAA,CANQ,MAMR;AAAA,MANQ,KAMR,GAAA,IAAA,CANQ,KAMR;AAAA,MAFXC,KAEW,GAAA,IAAA,CAFXA,KAEW;AAAA,MADRC,IACQ,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,MACHC,MADG,GACX,KADW,CACHA,MADG;;AAAA,cAGkCG,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,KAA7C,EAHW;AAAA,oCAGHF,eAHG;AAAA,MAGHA,eAHG,sCAGeD,MAAM,CAACE,OAHtB;;AAKX,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAE,CACL;AACEE,MAAAA,KAAK,EADP,IAAA;AAEEC,MAAAA,MAAM,EAFR,IAAA;AAGEC,MAAAA,YAAY,EAAET,IAAI,GAHpB,CAAA;AAIEI,MAAAA,eAAAA,EAAAA;AAJF,KADK,EAAA,KAAA;AADT,GAAA,EAAA,IAAA,CAAA,EAYG,OAAA,MAAA,KAAA,UAAA,IAAgCM,MAAM,CAAC;AAAEV,IAAAA,IAAAA,EAAAA;AAAF,GAAD,CAZzC,EAaG,OAAA,MAAA,KAAA,UAAA,IACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,MAAM,EADR,MAAA;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAP,IAAA;AAAeC,MAAAA,MAAM,EAArB,IAAA;AAA6BC,MAAAA,YAAY,EAAET,IAAI,GAAG;AAAlD;AAFT,GAAA,CAdJ,CADF;AAXF,CAAA;;AAmCAD,WAAW,CAAXA,WAAAA,GAAAA,cAAAA;AAEA,eAAeY,SAAS,CAAxB,WAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  ImageSourcePropType,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\nconst defaultSize = 64;\n\nexport type AvatarImageSource =\n  | ImageSourcePropType\n  | ((props: { size: number }) => React.ReactNode);\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Image to display for the `Avatar`.\n   * It accepts a standard React Native Image `source` prop\n   * Or a function that returns an `Image`.\n   */\n  source: AvatarImageSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * export default MyComponent\n * ```\n */\nconst AvatarImage = ({\n  size = defaultSize,\n  source,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { colors } = theme;\n\n  const { backgroundColor = colors.primary } = StyleSheet.flatten(style) || {};\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        style,\n      ]}\n      {...rest}\n    >\n      {typeof source === 'function' && source({ size })}\n      {typeof source !== 'function' && (\n        <Image\n          source={source}\n          style={{ width: size, height: size, borderRadius: size / 2 }}\n        />\n      )}\n    </View>\n  );\n};\n\nAvatarImage.displayName = 'Avatar.Image';\n\nexport default withTheme(AvatarImage);\n"]},"metadata":{},"sourceType":"module"}