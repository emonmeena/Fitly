{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"./Button\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport { withTheme } from \"../core/theming\";\nvar DURATION_SHORT = 4000;\nvar DURATION_MEDIUM = 7000;\nvar DURATION_LONG = 10000;\n\nvar Snackbar = function Snackbar(_ref) {\n  var visible = _ref.visible,\n      action = _ref.action,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? DURATION_MEDIUM : _ref$duration,\n      onDismiss = _ref.onDismiss,\n      children = _ref.children,\n      wrapperStyle = _ref.wrapperStyle,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, [\"visible\", \"action\", \"duration\", \"onDismiss\", \"children\", \"wrapperStyle\", \"style\", \"theme\"]);\n\n  var _React$useRef = React.useRef(new Animated.Value(0.0)),\n      opacity = _React$useRef.current;\n\n  var _React$useState = React.useState(!visible),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hidden = _React$useState2[0],\n      setHidden = _React$useState2[1];\n\n  var hideTimeout = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    return function () {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n  React.useLayoutEffect(function () {\n    if (visible) {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;\n\n          if (finished && !isInfinity) {\n            hideTimeout.current = setTimeout(onDismiss, duration);\n          }\n        }\n      });\n    } else {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true\n      }).start(function (_ref3) {\n        var finished = _ref3.finished;\n        if (finished) setHidden(true);\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n  var colors = theme.colors,\n      roundness = theme.roundness;\n  if (hidden) return null;\n  return React.createElement(SafeAreaView, {\n    pointerEvents: \"box-none\",\n    style: [styles.wrapper, wrapperStyle]\n  }, React.createElement(Surface, _extends({\n    pointerEvents: \"box-none\",\n    accessibilityLiveRegion: \"polite\",\n    style: [styles.container, {\n      borderRadius: roundness,\n      opacity: opacity,\n      transform: [{\n        scale: visible ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.9, 1]\n        }) : 1\n      }]\n    }, {\n      backgroundColor: colors.onSurface\n    }, style]\n  }, rest), React.createElement(Text, {\n    style: [styles.content, {\n      marginRight: action ? 0 : 16,\n      color: colors.surface\n    }]\n  }, children), action ? React.createElement(Button, {\n    accessibilityLabel: action.accessibilityLabel,\n    onPress: function onPress() {\n      action.onPress();\n      onDismiss();\n    },\n    style: styles.button,\n    color: colors.accent,\n    compact: true,\n    mode: \"text\"\n  }, action.label) : null));\n};\n\nSnackbar.DURATION_SHORT = DURATION_SHORT;\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\nSnackbar.DURATION_LONG = DURATION_LONG;\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  container: {\n    elevation: 6,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6\n  }\n});\nexport default withTheme(Snackbar);","map":{"version":3,"sources":["Snackbar.tsx"],"names":["DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","duration","theme","rest","current","opacity","React","Animated","hideTimeout","scale","clearTimeout","setHidden","toValue","useNativeDriver","finished","isInfinity","Number","setTimeout","roundness","styles","borderRadius","transform","visible","inputRange","outputRange","backgroundColor","colors","onSurface","marginRight","action","color","surface","onDismiss","wrapper","position","bottom","width","container","elevation","flexDirection","justifyContent","alignItems","margin","content","marginLeft","marginVertical","flexWrap","flex","button","marginHorizontal","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  SafeAreaView,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\n\nimport Button from './Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: {\n    label: string;\n    accessibilityLabel?: string;\n    onPress: () => void;\n  };\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default uses `onSurface` color from theme.\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  wrapperStyle,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const [hidden, setHidden] = React.useState<boolean>(!visible);\n\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      // show\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          const isInfinity =\n            duration === Number.POSITIVE_INFINITY ||\n            duration === Number.NEGATIVE_INFINITY;\n\n          if (finished && !isInfinity) {\n            hideTimeout.current = setTimeout(onDismiss, duration);\n          }\n        }\n      });\n    } else {\n      // hide\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) setHidden(true);\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n\n  const { colors, roundness } = theme;\n\n  if (hidden) return null;\n\n  return (\n    <SafeAreaView\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        style={\n          [\n            styles.container,\n            {\n              borderRadius: roundness,\n              opacity: opacity,\n              transform: [\n                {\n                  scale: visible\n                    ? opacity.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.9, 1],\n                      })\n                    : 1,\n                },\n              ],\n            },\n            { backgroundColor: colors.onSurface },\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        {...rest}\n      >\n        <Text\n          style={[\n            styles.content,\n            { marginRight: action ? 0 : 16, color: colors.surface },\n          ]}\n        >\n          {children}\n        </Text>\n        {action ? (\n          <Button\n            accessibilityLabel={action.accessibilityLabel}\n            onPress={() => {\n              action.onPress();\n              onDismiss();\n            }}\n            style={styles.button}\n            color={colors.accent}\n            compact\n            mode=\"text\"\n          >\n            {action.label}\n          </Button>\n        ) : null}\n      </Surface>\n    </SafeAreaView>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    elevation: 6,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4,\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6,\n  },\n});\n\nexport default withTheme(Snackbar);\n"]},"metadata":{},"sourceType":"module"}