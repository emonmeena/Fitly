{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../core/theming\";\nvar DURATION = 2400;\n\nvar ActivityIndicator = function ActivityIndicator(_ref) {\n  var _ref$animating = _ref.animating,\n      animating = _ref$animating === void 0 ? true : _ref$animating,\n      indicatorColor = _ref.color,\n      _ref$hidesWhenStopped = _ref.hidesWhenStopped,\n      hidesWhenStopped = _ref$hidesWhenStopped === void 0 ? true : _ref$hidesWhenStopped,\n      _ref$size = _ref.size,\n      indicatorSize = _ref$size === void 0 ? 'small' : _ref$size,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"]);\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      timer = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)),\n      fade = _React$useRef2.current;\n\n  var rotation = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  var startRotation = React.useCallback(function () {\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true\n    }).start();\n\n    if (rotation.current) {\n      timer.setValue(0);\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  var stopRotation = function stopRotation() {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(function () {\n    if (rotation.current === undefined) {\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n  var color = indicatorColor || theme.colors.primary;\n  var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n  var frames = 60 * DURATION / 1000;\n  var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  var containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden'\n  };\n  return React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\"\n  }), React.createElement(Animated.View, {\n    style: [{\n      width: size,\n      height: size,\n      opacity: fade\n    }],\n    collapsable: false\n  }, [0, 1].map(function (index) {\n    var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      return frameIndex / (frames - 1);\n    });\n    var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      var progress = 2 * frameIndex / (frames - 1);\n      var rotation = index ? +(360 - 15) : -(180 - 15);\n\n      if (progress > 1.0) {\n        progress = 2.0 - progress;\n      }\n\n      var direction = index ? -1 : +1;\n      return \"\".concat(direction * (180 - 30) * easing(progress) + rotation, \"deg\");\n    });\n    var layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: timer.interpolate({\n          inputRange: [0, 1],\n          outputRange: [\"\".concat(0 + 30 + 15, \"deg\"), \"\".concat(2 * 360 + 30 + 15, \"deg\")]\n        })\n      }]\n    };\n    var viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index ? -size / 2 : 0\n      }, {\n        rotate: timer.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        })\n      }]\n    };\n    var offsetStyle = index ? {\n      top: size / 2\n    } : null;\n    var lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderWidth: size / 10,\n      borderRadius: size / 2\n    };\n    return React.createElement(Animated.View, {\n      key: index,\n      style: [styles.layer]\n    }, React.createElement(Animated.View, {\n      style: layerStyle\n    }, React.createElement(Animated.View, {\n      style: [containerStyle, offsetStyle],\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: viewportStyle\n    }, React.createElement(Animated.View, {\n      style: containerStyle,\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: lineStyle\n    }))))));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\nexport default withTheme(ActivityIndicator);","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["DURATION","ActivityIndicator","animating","color","hidesWhenStopped","size","indicatorSize","theme","rest","current","timer","React","Animated","fade","rotation","animation","scale","startRotation","duration","toValue","isInteraction","useNativeDriver","stopRotation","easing","Easing","Platform","indicatorColor","frames","containerStyle","width","height","overflow","styles","opacity","index","inputRange","Array","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","container","justifyContent","alignItems","layer","StyleSheet","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden',\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}